version: "3.8"

services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    ports:
      - "80:80"
      - "8080:8080"
    networks:
      - app-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./docker-internals/traefik.yml:/etc/traefik/traefik.yml
    labels:
      - "traefik.http.routers.traefik.rule=Host(`traefik.local`)"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"

  feed-api:
    build:
      context: .
      dockerfile: Dockerfile.feed-api
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    networks:
      - app-network
    volumes:
      - ./docker-internals/api-cache.env:/root/app/.env
    labels:
      - "traefik.http.routers.feed-api.rule=Host(`feed-api.local`)"
      - "traefik.http.services.feed-api.loadbalancer.server.port=8080"
    depends_on:
      - redis-api-cache
      - redis-news-cache
    restart: always

  feed-curator:
    build:
      context: .
      dockerfile: Dockerfile.feed-curator
    container_name: feed-curator
    networks:
      - app-network
    depends_on:
      - redis-news-cache
    volumes:
      - ./docker-internals/news-cache.env:/root/app/.env
    restart: always

  redis-api-cache:
    image: redis:latest
    container_name: redis-api-cache
    ports:
      - "6000:6379"
    networks:
      - app-network
    restart: always

  redis-news-cache:
    image: redis:latest
    container_name: redis-news-cache
    ports:
      - "5000:6379"
    networks:
      - app-network
    restart: always

networks:
  app-network:
    driver: bridge
